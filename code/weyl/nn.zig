const std = @import("std");

fn forward(w: [36]f32, x: f32) f32 {
    var a2: f32 = 0;
    comptime var i: usize = 0;
    inline while (i < 12) : (i += 1) a2 += @sin(x * w[12 + i] + w[i]) * w[24 + i];
    return a2; // purelin(a2)
}

// def error(W):
//     sum = 0
//     for x in X:
//         part = (integration(x, lambda t: NN(W, t)) - right_eq(x))**2
//         sum += part
//     return sum / len(X)

pub fn main() !void {
    std.debug.print("\nweights2: ", .{});
    for (weights2) |w| std.debug.print("{d:.3}, ", .{w});

    const x: f32 = 1.5;
    const y = forward(weights2, 1.5);
    std.debug.print("\n\nforward({d:.3}) = {d:.3}\n", .{ x, y });
}

const weights2: [36]f32 = .{ 7.603236172295869677e-01, -1.719828956830381922e-02, 5.727591677136329995e-01, 7.751181311525225937e-01, 4.780151563108267498e-01, 2.270454008140856406e-01, 1.702198675266772265e-01, 7.691694454116951851e-01, 1.094749035392145881e-01, 8.590288889295169539e-02, 6.908832432006389856e-01, 9.780077601967838152e-01, -7.502617784564356851e-02, 3.883085974408610475e-01, 1.210402051432112769e+00, 4.188451285782722744e-01, 7.163696969925386071e-01, -9.183253335142674278e-02, 1.560638996259978928e+00, 6.992037763995817556e-01, 1.192281744559369784e-02, -4.214179337102697681e-02, 3.218788256214019095e-01, 5.556059887317476020e-01, 4.268579067437321406e-01, 1.429232793696635362e-01, -7.378586301452214058e-02, 1.954680029100448468e-01, 3.071611381151858611e-01, 5.162447555572483582e-01, 7.229654706400401309e-01, 2.652857278957371778e-01, 4.898447529195212868e-01, 2.443281432420108257e-01, -5.189361638747112121e-02, 7.038124693927678976e-02 };
